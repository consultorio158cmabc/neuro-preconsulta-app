import streamlit as st
import pandas as pd
from datetime import datetime
from openpyxl import load_workbook
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# Nueva funci√≥n conectar_google_sheets usando solo st.secrets (sin archivos .json locales)
def conectar_google_sheets():
    import gspread
    from oauth2client.service_account import ServiceAccountCredentials

    scope = [
        "https://spreadsheets.google.com/feeds",
        "https://www.googleapis.com/auth/spreadsheets",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive"
    ]

    # ‚úÖ Usa exclusivamente los secretos de Streamlit
    google_secrets = st.secrets["gcp_service_account"]
    credentials_dict = dict(google_secrets)
    creds = ServiceAccountCredentials.from_json_keyfile_dict(credentials_dict, scope)
    client = gspread.authorize(creds)
    return client

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Preconsulta en Neurocirug√≠a")

# T√≠tulo de la aplicaci√≥n
st.title("üß† Algoritmo de Preconsulta en Neurocirug√≠a")

# Secci√≥n: Datos generales del paciente
st.markdown("### Datos generales del paciente")
nombre = st.text_input("Nombre completo")
edad = st.number_input("Edad", min_value=0, max_value=120)
sexo = st.selectbox("Sexo", ["Seleccione...", "Mujer", "Hombre", "Otro"])
consulta = st.radio("Tipo de consulta", ["Primera vez", "Subsecuente"])

# Validaci√≥n inicial de campos generales
motivo = st.selectbox("Motivo de consulta", [
    "Seleccione...",
    "Dolor / Cirug√≠a Lumbar",
    "Dolor / Cirug√≠a Cervical",
    "Dolor / Cirug√≠a Columna Dorsal",
    "Tumor Intracraneal",
    "Neuralgia del Trig√©mino",
    "Aneurisma Intracraneal / Malformaci√≥n Arteriovenosa / Angioma Cavernoso",
    "Traumatismo Craneoencef√°lico",
    "Enfermedad Vascular Cerebral (EVC / Ictus)",
    "Hidrocefalia",
    "S√≠ntomas Inespec√≠ficos (mareo, v√©rtigo, n√°usea, v√≥mito, debilidad)",
    "Otro (especificar)"
])
campos_generales_validos = (
    nombre.strip() != "" and
    edad > 0 and
    sexo != "Seleccione..." and
    consulta in ["Primera vez", "Subsecuente"] and
    motivo != "Seleccione..."
)

# Secci√≥n: Selecci√≥n de motivo de consulta
st.markdown("### Seleccione su motivo de consulta")
if motivo == "Dolor / Cirug√≠a Lumbar":
    with st.expander("Ingresar datos de Dolor / Cirug√≠a Lumbar", expanded=True):
        tratamiento = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas = {
            "Dolor lumbar": st.checkbox("Dolor lumbar"),
            "Dolor con irradiaci√≥n a pierna derecha": st.checkbox("Dolor con irradiaci√≥n a pierna derecha"),
            "Dolor con irradiaci√≥n a pierna izquierda": st.checkbox("Dolor con irradiaci√≥n a pierna izquierda"),
            "Entumecimiento u hormigueo en pierna derecha": st.checkbox("Entumecimiento u hormigueo en pierna derecha"),
            "Entumecimiento u hormigueo en pierna izquierda": st.checkbox("Entumecimiento u hormigueo en pierna izquierda"),
            "Debilidad en pierna derecha": st.checkbox("Debilidad en pierna derecha"),
            "Debilidad en pierna izquierda": st.checkbox("Debilidad en pierna izquierda"),
            "Dificultad para caminar": st.checkbox("Dificultad para caminar"),
            "Incontinencia urinaria o fecal": st.checkbox("Incontinencia urinaria o fecal")
        }

        st.markdown("### Intensidad del dolor")
        st.image("VAS.jpg", caption="Escala Visual An√°loga (VAS)", use_container_width=True)
        vas_lumbar = st.radio("Dolor lumbar:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)
        vas_derecha = st.radio("Dolor en pierna derecha:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)
        vas_izquierda = st.radio("Dolor en pierna izquierda:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)

        st.markdown("### Funcionalidad en la vida diaria")
        st.info("En las siguientes actividades, seleccione la opci√≥n que m√°s se parezca a su situaci√≥n actual:")

        odi_preguntas = [
            ("1) Intensidad del dolor", [
                "Puedo soportar el dolor sin necesidad de tomar analg√©sicos",
                "El dolor es fuerte pero cede sin tomar analg√©sicos",
                "Los analg√©sicos alivian totalmente el dolor",
                "Los analg√©sicos alivian parcialmente el dolor",
                "Los analg√©sicos apenas me alivian el dolor",
                "Los analg√©sicos no me alivian el dolor y no los tomo"
            ]),
            ("2) Cuidado Personal", [
                "Puedo cuidar de m√≠ mism@ de manera normal sin que esto cause dolor",
                "Puedo cuidar de m√≠ mism@, pero esto me causa dolor",
                "Lavarme, vestirme, etc., me produce dolor y tengo que hacerlo despacio y con cuidado",
                "Necesito un poco de ayuda, pero manejo la mayor√≠a de mi cuidado personal",
                "Necesito ayuda todos los d√≠as en la mayor√≠a de los aspectos de mi cuidado personal",
                "No me puedo vestir, me ba√±o con dificultad, prefiero permanecer en cama"
            ]),
            ("3) Estar de Pie", [
                "Puedo estar de pie tanto tiempo como quiera sin que aumente el dolor",
                "Puedo estar de pie tanto tiempo como quiera, pero me causa dolor",
                "El dolor me impide estar de pie m√°s de una hora",
                "El dolor me impide estar de pie m√°s de media hora",
                "El dolor me impide estar de pie m√°s de 10 minutos",
                "El dolor me impide estar de pie"
            ]),
            ("4) Dormir", [
                "El dolor no me impide dormir bien",
                "S√≥lo puedo dormir si tomo pastillas para manejar el dolor",
                "Incluso tomando pastillas para el dolor duermo menos de 6 horas",
                "Incluso tomando pastillas para el dolor duermo menos de 4 horas",
                "Incluso tomando pastillas para el dolor duermo menos de 2 horas",
                "El dolor me impide totalmente conciliar el sue√±o"
            ]),
            ("5) Levantar peso", [
                "Puedo levantar objetos pesados sin que esto aumente el dolor",
                "Puedo levantar objetos pesados, pero esto aumenta el dolor",
                "El dolor me impide levantar objetos pesados del suelo, pero puedo hacerlo si est√°n en un sitio c√≥modo",
                "El dolor me impide levantar objetos pesados, pero s√≠ puedo levantar objetos ligeros o medianos si est√°n en un sitio c√≥modo",
                "S√≥lo puedo levantar objetos muy ligeros",
                "No puedo levantar ni elevar ning√∫n objeto"
            ]),
            ("6) Caminar", [
                "El dolor no me impide caminar",
                "El dolor me impide caminar m√°s de 1 kil√≥metro",
                "El dolor me impide caminar m√°s de 500 metros",
                "El dolor me impide caminar m√°s de 250 metros",
                "S√≥lo puedo caminar con bast√≥n o muletas",
                "Permanezco en cama casi todo el tiempo"
            ]),
            ("7) Estar sentado", [
                "Puedo estar sentado en cualquier tipo de silla todo el tiempo que quiera",
                "Puedo estar sentado en mi silla favorita todo el tiempo que quiera",
                "El dolor me impide estar sentado m√°s de 1 hora",
                "El dolor me impide estar sentado m√°s de media hora",
                "El dolor me impide estar sentado m√°s de 10 minutos",
                "El dolor me impide estar sentado"
            ]),
            ("8) Vida social", [
                "Mi vida social es normal y no me aumenta el dolor",
                "Mi vida social es normal, pero aumenta el dolor",
                "El dolor no tiene un efecto importante en mi vida social, pero s√≠ impide actividades m√°s en√©rgicas",
                "El dolor limita mi vida social y no salgo tan a menudo como de costumbre",
                "El dolor limita mi vida social al hogar",
                "No tengo vida social a causa del dolor"
            ]),
            ("9) Viajar", [
                "Puedo viajar a cualquier sitio sin que aumente el dolor",
                "Puedo viajar a cualquier sitio, pero esto aumenta el dolor",
                "El dolor es fuerte, pero aguanto viajes de m√°s de 2 horas",
                "El dolor me limita a viajes de menos de 1 hora",
                "El dolor me limita a viajes cortos y necesarios de menos de media hora",
                "El dolor me impide viajar, excepto para ir al m√©dico o al hospital"
            ]),
            ("10) Actividad sexual", [
                "No aplica",
                "Es normal y no aumenta el dolor",
                "Es normal, pero aumenta el dolor",
                "Es casi normal, pero aumenta mucho el dolor",
                "Se ve muy limitada a causa del dolor",
                "Casi nula a causa del dolor",
                "El dolor me impide actividad sexual"
            ])
        ]

        odi_respuestas = []
        for i, (titulo, opciones) in enumerate(odi_preguntas):
            respuesta = st.radio(titulo, opciones, key=f"odi_{i}")
            if respuesta != "No aplica":
                odi_respuestas.append(opciones.index(respuesta))

        odi_total = sum(odi_respuestas)
        odi_base = 50 if len(odi_respuestas) == 10 else 45
        odi_puntaje = round((odi_total / odi_base) * 100)

        macnab = None
        if tratamiento == "Operado previamente con Dr. Ulises Garc√≠a":
            st.markdown("### Satisfacci√≥n del Paciente con Procedimiento Quir√∫rgico")
            macnab = st.radio(
                "¬øC√≥mo describir√≠a su estado actual tras la cirug√≠a?",
                [
                    "Excelente - No presento dolor ni restricci√≥n de la movilidad. Regres√© a mi trabajo y a mis actividades cotidianas.",
                    "Bueno - Presento dolor ocasional en espalda baja, presento un alivio de los s√≠ntomas en comparaci√≥n a antes de la cirug√≠a. Regres√© a mi ocupaci√≥n y actividades cotidianas, pero con algunas restricciones.",
                    "Regular - Presento cierta mejor√≠a funcional, aunque regresar al trabajo y a mis actividades cotidianas ha sido complicado.",
                    "Malo - Persisto con dolor lumbar y/o extensi√≥n hacia las piernas, requer√≠ o estoy considerando someterme a una nueva cirug√≠a para aliviar el dolor."
                ]
            )

        campos_lumbar_validos = (
            tratamiento != "" and
            any(sintomas.values()) and
            vas_lumbar is not None and
            vas_derecha is not None and
            vas_izquierda is not None and
            len(odi_respuestas) >= 5
        )

        if st.button("Enviar", key="enviar_lumbar"):
            if campos_generales_validos and campos_lumbar_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento,
                    "S√≠ntomas": ", ".join([s for s, v in sintomas.items() if v]),
                    "VAS lumbar": vas_lumbar,
                    "VAS pierna derecha": vas_derecha,
                    "VAS pierna izquierda": vas_izquierda,
                    "ODI (%)": odi_puntaje,
                    "MacNab": macnab if macnab else "N/A"
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Dolor_Cirug√≠a_Lumbar")
                    # A√±adir encabezados si la hoja est√° vac√≠a
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Dolor / Cirug√≠a Cervical":
    with st.expander("Ingresar datos de Dolor / Cirug√≠a Cervical", expanded=True):
        tratamiento_cervical = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas_cervical = {
            "Dolor cervical": st.checkbox("Dolor cervical"),
            "Dolor con irradiaci√≥n a brazo derecho": st.checkbox("Dolor con irradiaci√≥n a brazo derecho"),
            "Dolor con irradiaci√≥n a brazo izquierdo": st.checkbox("Dolor con irradiaci√≥n a brazo izquierdo"),
            "Entumecimiento u hormigueo en brazo derecho": st.checkbox("Entumecimiento u hormigueo en brazo derecho"),
            "Entumecimiento u hormigueo en brazo izquierdo": st.checkbox("Entumecimiento u hormigueo en brazo izquierdo"),
            "Debilidad en brazo derecho": st.checkbox("Debilidad en brazo derecho"),
            "Debilidad en brazo izquierdo": st.checkbox("Debilidad en brazo izquierdo")
        }

        st.markdown("### Intensidad del dolor")
        st.image("VAS.jpg", caption="Escala Visual An√°loga (VAS)", use_container_width=True)
        vas_cervical = st.radio("Dolor cervical:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)
        vas_brazo_der = st.radio("Dolor en brazo derecho:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)
        vas_brazo_izq = st.radio("Dolor en brazo izquierdo:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)

        st.markdown("### Funcionalidad en la vida diaria")
        st.info("En las siguientes actividades, seleccione la opci√≥n que m√°s se parezca a su situaci√≥n actual:")

        ndi_preguntas = [
            ("1) Intensidad del dolor", [
                "No tengo dolor en este momento",
                "El dolor es tolerable en este momento",
                "El dolor es moderado en este momento",
                "El dolor es intenso en este momento",
                "El dolor es muy intenso en este momento",
                "El dolor es el peor imaginable"
            ]),
            ("2) Cuidado personal", [
                "Puedo cuidar de m√≠ mism@ de manera normal sin que esto cause dolor",
                "Puedo cuidar de m√≠ mism@, pero esto me causa dolor",
                "Lavarme, vestirme, etc., me produce dolor y tengo que hacerlo despacio y con cuidado",
                "Necesito un poco de ayuda, pero manejo la mayor√≠a de mi cuidado personal",
                "Necesito ayuda todos los d√≠as en la mayor√≠a de los aspectos de mi cuidado personal",
                "No me puedo vestir, me ba√±o con dificultad, prefiero permanecer en cama"
            ]),
            ("3) Levantar objetos", [
                "Puedo levantar objetos pesados sin que esto cause dolor",
                "Puedo levantar objetos pesados, pero esto causa dolor",
                "El dolor me impide levantar objetos pesados del suelo, pero puedo hacerlo si est√°n en un sitio c√≥modo",
                "El dolor me impide levantar objetos pesados, pero s√≠ puedo levantar objetos ligeros o medianos si est√°n en un sitio c√≥modo",
                "S√≥lo puedo levantar objetos muy ligeros",
                "No puedo levantar ni elevar ning√∫n objeto"
            ]),
            ("4) Leer", [
                "Leer no me causa dolor",
                "Puedo leer todo lo que quiera con ligero dolor en mi cuello",
                "Puedo leer todo lo que quiera con dolor moderado en mi cuello",
                "No puedo leer todo lo que quiera debido a dolor moderado en mi cuello",
                "Apenas puedo leer debido al fuerte dolor en mi cuello",
                "El dolor en mi cuello no me permite leer en lo absoluto"
            ]),
            ("5) Dolor de cabeza", [
                "No tengo dolores de cabeza en lo absoluto",
                "Tengo dolores de cabeza leves, que ocurren con poca frecuencia",
                "Tengo dolores de cabeza moderados, que ocurren con poca frecuencia",
                "Tengo dolores de cabeza moderados, que ocurren con frecuencia",
                "Tengo dolores de cabeza intensos, que ocurren con frecuencia",
                "Tengo dolores de cabeza intensos casi todo el tiempo"
            ]),
            ("6) Concentraci√≥n", [
                "Puedo concentrarme completamente cuando quiero, sin dificultad",
                "Puedo concentrarme completamente cuando quiero, con ligera dificultad",
                "Tengo un grado moderado de dificultad para concentrarme cuando quiero",
                "Tengo mucha dificultad para concentrarme cuando quiero",
                "Tengo demasiada dificultad para concentrarme cuando quiero",
                "No puedo concentrarme en absoluto"
            ]),
            ("7) Trabajo / Actividades Cotidianas", [
                "Puedo trabajar tanto como desee",
                "Solo puedo hacer mi trabajo habitual, pero no m√°s",
                "Puedo hacer la mayor parte de mi trabajo habitual, pero no m√°s",
                "No puedo hacer mi trabajo habitual",
                "Apenas puedo trabajar",
                "No puedo trabajar en absoluto"
            ]),
            ("8) Manejar", [
                "Puedo conducir mi autom√≥vil sin ning√∫n dolor de cuello",
                "Puedo conducir todo el tiempo que quiera, con dolor leve en el cuello",
                "Puedo conducir todo el tiempo que quiera, con dolor moderado en el cuello",
                "No puedo conducir todo el tiempo que quiera por el dolor",
                "Apenas puedo conducir por el dolor severo",
                "No puedo conducir en absoluto"
            ]),
            ("9) Dormir", [
                "No tengo problemas para dormir",
                "Mi sue√±o est√° ligeramente alterado (menos de 1 hora sin dormir)",
                "Mi sue√±o est√° levemente alterado (1‚Äì2 horas sin dormir)",
                "Mi sue√±o est√° moderadamente alterado (2‚Äì3 horas sin dormir)",
                "Mi sue√±o est√° gravemente alterado (3‚Äì5 horas sin dormir)",
                "Mi sue√±o est√° completamente alterado (5‚Äì7 horas sin dormir)"
            ]),
            ("10) Recreaci√≥n", [
                "Puedo realizar todas mis actividades recreativas sin ning√∫n dolor de cuello",
                "Puedo realizar todas mis actividades recreativas, pero con algo de dolor en el cuello",
                "Puedo realizar la mayor√≠a, pero no todas, de mis actividades recreativas habituales",
                "Solo puedo realizar algunas de mis actividades recreativas",
                "Apenas puedo realizar actividades recreativas",
                "No puedo realizar ninguna actividad recreativa"
            ])
        ]

        ndi_respuestas = []
        for i, (titulo, opciones) in enumerate(ndi_preguntas):
            respuesta = st.radio(titulo, opciones, key=f"ndi_{i}")
            ndi_respuestas.append(opciones.index(respuesta))

        ndi_total = sum(ndi_respuestas)
        ndi_puntaje = round((ndi_total / 50) * 100)

        st.markdown("### Dificultad para la marcha")
        nurick = st.radio(
            "Seleccione el grado que mejor describa su capacidad para caminar:",
            [
                "0 - Sin dificultad para caminar",
                "1 - Dificultad para caminar sin limitaci√≥n de la actividad",
                "2 - Dificultad para caminar que limita el rendimiento o la velocidad",
                "3 - Solo puede trabajar con asistencia de bast√≥n o barandal",
                "4 - Requiere asistencia de otra persona",
                "5 - Confinado a silla de ruedas o cama"
            ]
        )

        # --- MJOA Section ---
        st.markdown("### Sistema de Evaluaci√≥n de Motricidad, Sensibilidad y Control de Esf√≠nteres")

        mjoa_preguntas = [
            ("Funci√≥n Motora de Brazos (Extremidades Superiores)", [
                "0 - Incapaz de mover las manos.",
                "1 - Incapaz de comer con una cuchara, pero capaz de mover las manos.",
                "2 - Incapacidad de abotonar una camisa, pero capaz de comer con una cuchara.",
                "3 - Capaz de abotonar una camisa con mucha dificultad.",
                "4 - Capaz de abotonar camisa con poca dificultad.",
                "5 - Sin alteraciones."
            ]),
            ("Funci√≥n Motora de Piernas (Extremidades Inferiores)", [
                "0 - P√©rdida completa de la movilidad y sensibilidad en piernas.",
                "1 - Preservaci√≥n de la sensibilidad, incapaz de mover las piernas.",
                "2 - Capaz de mover las piernas, pero incapaz de caminar.",
                "3 - Capaz de caminar en piso plano con apoyo (ej. bast√≥n, andadera).",
                "4 - Capaz de subir/bajar escaleras con uso de barandal.",
                "5 - Inestabilidad moderada, aunque es capaz subir/bajar escaleras sin uso de barandal.",
                "6 - Inestabilidad leve, aunque camina sin apoyo pero con marcha lenta y suave",
                "7 - Sin alteraciones"
            ]),
            ("Sensibilidad", [
                "0 - P√©rdida completa de la sensibilidad en manos.",
                "1 - P√©rdida severa de la sensibilidad y/o dolor.",
                "2 - Leve p√©rdida de la sensibilidad en manos/brazos.",
                "3 - Sin alteraciones de la sensibilidad."
            ]),
            ("Disfunci√≥n de Esf√≠nteres", [
                "0 - Incapacidad de orinar voluntariamente.",
                "1 - Dificultad marcada para poder orinar voluntariamente.",
                "2 - Dificultad leve-moderada para orinar voluntariamente.",
                "3 - Sin alteraciones."
            ])
        ]

        mjoa_respuestas = []
        for i, (titulo, opciones) in enumerate(mjoa_preguntas):
            respuesta = st.radio(titulo, opciones, key=f"mjoa_{i}")
            mjoa_respuestas.append(opciones.index(respuesta))

        mjoa_total = sum(mjoa_respuestas)

        macnab_cervical = None
        if tratamiento_cervical == "Operado previamente con Dr. Ulises Garc√≠a":
            st.markdown("### Satisfacci√≥n del Paciente con Procedimiento Quir√∫rgico")
            macnab_cervical = st.radio(
                "¬øC√≥mo describir√≠a su estado actual tras la cirug√≠a?",
                [
                    "Excelente - No presento dolor ni restricci√≥n de la movilidad. Regres√© a mi trabajo y a mis actividades cotidianas.",
                    "Bueno - Presento dolor ocasional en cuello o brazo, con alivio funcional comparado a antes de la cirug√≠a.",
                    "Regular - Presento cierta mejor√≠a funcional, pero regresar al trabajo o actividades ha sido complicado.",
                    "Malo - Persisto con dolor cervical y/o irradiaci√≥n a brazos. Considero una nueva cirug√≠a."
                ]
            )

        campos_cervical_validos = (
            tratamiento_cervical != "" and
            any(sintomas_cervical.values()) and
            vas_cervical is not None and
            vas_brazo_der is not None and
            vas_brazo_izq is not None and
            len(ndi_respuestas) == 10 and
            nurick is not None
        )

        if st.button("Enviar", key="enviar_cervical"):
            if campos_generales_validos and campos_cervical_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                seleccionados = [s for s, v in sintomas_cervical.items() if v]

                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento_cervical,
                    "S√≠ntomas": ", ".join(seleccionados),
                    "VAS cervical": vas_cervical,
                    "VAS brazo derecho": vas_brazo_der,
                    "VAS brazo izquierdo": vas_brazo_izq,
                    "NDI (%)": ndi_puntaje,
                    "Nurick": nurick,
                    "MJOA (puntos)": mjoa_total,
                    "MacNab": macnab_cervical if macnab_cervical else "N/A"
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Dolor_Cirug√≠a_Cervical")
                    # A√±adir encabezados si la hoja est√° vac√≠a o no tiene valores
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Dolor / Cirug√≠a Columna Dorsal":
    with st.expander("Ingresar datos de Dolor / Cirug√≠a en columna dorsal", expanded=True):
        tratamiento_dorsal = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas_dorsal = {
            "Dolor en columna dorsal": st.checkbox("Dolor en columna dorsal"),
            "Hormigueo o parestesias en regi√≥n dorsal de la columna": st.checkbox("Hormigueo o parestesias en regi√≥n dorsal de la columna")
        }

        st.markdown("### Intensidad del dolor")
        st.image("VAS.jpg", caption="Escala Visual An√°loga (VAS)", use_container_width=True)
        vas_dorsal = st.radio("Dolor en columna dorsal:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)

        st.markdown("### Dificultad para la marcha")
        nurick_dorsal = st.radio(
            "Seleccione el grado que mejor describa su capacidad para caminar:",
            [
                "0 - Sin dificultad para caminar",
                "1 - Dificultad para caminar sin limitaci√≥n de la actividad",
                "2 - Dificultad para caminar que limita el rendimiento o la velocidad",
                "3 - Solo puede trabajar con asistencia de bast√≥n o barandal",
                "4 - Requiere asistencia de otra persona",
                "5 - Confinado a silla de ruedas o cama"
            ]
        )

        macnab_dorsal = None
        if tratamiento_dorsal == "Operado previamente con Dr. Ulises Garc√≠a":
            st.markdown("### Satisfacci√≥n del Paciente con Procedimiento Quir√∫rgico")
            macnab_dorsal = st.radio(
                "¬øC√≥mo describir√≠a su estado actual tras la cirug√≠a?",
                [
                    "Excelente - No presento dolor ni restricci√≥n de la movilidad. Regres√© a mi trabajo y a mis actividades cotidianas.",
                    "Bueno - Presento dolor ocasional en espalda, presento un alivio de los s√≠ntomas en comparaci√≥n a antes de la cirug√≠a. Regres√© a mi ocupaci√≥n y actividades cotidianas, pero con algunas restricciones.",
                    "Regular - Presento cierta mejor√≠a funcional, aunque regresar al trabajo y a mis actividades cotidianas ha sido complicado.",
                    "Malo - Persisto con dolor dorsal y/o s√≠ntomas neurol√≥gicos, requer√≠ o estoy considerando someterme a una nueva cirug√≠a para aliviar el dolor."
                ]
            )

        campos_dorsal_validos = (
            tratamiento_dorsal != "" and
            any(sintomas_dorsal.values()) and
            vas_dorsal is not None and
            nurick_dorsal is not None
        )

        if st.button("Enviar", key="enviar_dorsal"):
            if campos_generales_validos and campos_dorsal_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                seleccionados = [s for s, v in sintomas_dorsal.items() if v]

                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento_dorsal,
                    "S√≠ntomas": ", ".join(seleccionados),
                    "VAS dorsal": vas_dorsal,
                    "Nurick": nurick_dorsal,
                    "MacNab": macnab_dorsal if macnab_dorsal else "N/A"
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Dolor_Cirug√≠a_Columna_Dorsal")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Tumor Intracraneal":
    with st.expander("Ingresar datos de Tumor Intracraneal", expanded=True):
        tratamiento_tumor = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas_tumor = {
            "Dolor de cabeza": st.checkbox("Dolor de cabeza"),
            "Convulsiones": st.checkbox("Convulsiones"),
            "N√°usea o v√≥mito": st.checkbox("N√°usea o v√≥mito"),
            "Cambios en la visi√≥n": st.checkbox("Cambios en la visi√≥n"),
            "Cambios en el habla": st.checkbox("Cambios en el habla"),
            "Cambios en el comportamiento": st.checkbox("Cambios en el comportamiento"),
            "Debilidad de hemicuerpo derecho": st.checkbox("Debilidad de hemicuerpo derecho"),
            "Debilidad de hemicuerpo izquierdo": st.checkbox("Debilidad de hemicuerpo izquierdo"),
            "Dificultad para comprender": st.checkbox("Dificultad para comprender"),
            "Dificultad para concentrarse": st.checkbox("Dificultad para concentrarse"),
            "Cambios en el h√°bito intestinal (diarrea o constipaci√≥n)": st.checkbox("Cambios en el h√°bito intestinal (diarrea o constipaci√≥n)")
        }

        st.markdown("### Estado funcional en la vida diaria")
        kps_opciones = [
            "100% - Normal; sin quejas ni evidencia de enfermedad",
            "90% - Capaz de realizar actividad normal; ligeros signos o s√≠ntomas de enfermedad",
            "80% - Actividad normal con esfuerzo; algunos signos o s√≠ntomas de enfermedad",
            "70% - Capaz de cuidarse a s√≠ mismo; no puede realizar actividades normales",
            "60% - Requiere asistencia ocasional pero puede satisfacer la mayor√≠a de sus necesidades personales",
            "50% - Requiere asistencia considerable y cuidados m√©dicos frecuentes",
            "40% - Discapacitado; requiere cuidados especiales y asistencia constante",
            "30% - Severamente discapacitado; hospitalizaci√≥n es indicada aunque no inminente",
            "20% - Enfermo gravemente; hospitalizaci√≥n necesaria y tratamiento activo requerido",
            "10% - Moribundo; progresi√≥n fatal de la enfermedad"
        ]
        kps = st.radio("Seleccione la opci√≥n que m√°s se parezca a su estado actual:", kps_opciones)

        st.markdown("### Tratamientos previos")
        radio_terapia = st.radio("¬øHa recibido radioterapia?", ["No", "S√≠"])
        sesiones_radio = st.number_input("¬øCu√°ntas sesiones ha recibido?", min_value=0, step=1) if radio_terapia == "S√≠" else None

        quimio = st.radio("¬øHa recibido quimioterapia?", ["No", "S√≠"])
        ciclos_quimio = st.number_input("¬øCu√°ntos ciclos ha recibido?", min_value=0, step=1) if quimio == "S√≠" else None

        campos_tumor_validos = (
            tratamiento_tumor != "" and
            any(sintomas_tumor.values()) and
            kps is not None and
            radio_terapia in ["No", "S√≠"] and
            quimio in ["No", "S√≠"] and
            (radio_terapia == "No" or sesiones_radio is not None) and
            (quimio == "No" or ciclos_quimio is not None)
        )

        if st.button("Enviar", key="enviar_tumor"):
            if campos_generales_validos and campos_tumor_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                seleccionados = [s for s, v in sintomas_tumor.items() if v]

                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento_tumor,
                    "S√≠ntomas": ", ".join(seleccionados),
                    "KPS": kps,
                    "Radioterapia": radio_terapia,
                    "Sesiones radioterapia": sesiones_radio if sesiones_radio is not None else "N/A",
                    "Quimioterapia": quimio,
                    "Ciclos quimioterapia": ciclos_quimio if ciclos_quimio is not None else "N/A"
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Tumor_Intracraneal")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Neuralgia del Trig√©mino":
    with st.expander("Ingresar datos de Neuralgia del Trig√©mino", expanded=True):
        tratamiento_trigemino = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas_trigemino = {
            "Dolor punzante en hemicara derecha": st.checkbox("Dolor punzante en hemicara derecha"),
            "Dolor punzante en hemicara izquierda": st.checkbox("Dolor punzante en hemicara izquierda"),
            "Desencadenado por est√≠mulos como cepillarse los dientes, hablar o tocarse la cara": st.checkbox("Desencadenado por est√≠mulos como cepillarse los dientes, hablar o tocarse la cara"),
            "Limitaci√≥n funcional o ansiedad por dolor": st.checkbox("Limitaci√≥n funcional o ansiedad por dolor")
        }

        st.markdown("### Intensidad del dolor")
        st.image("VAS.jpg", caption="Escala Visual An√°loga (VAS)", use_container_width=True)
        vas_derecha = st.radio("Dolor en hemicara derecha:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)
        vas_izquierda = st.radio("Dolor en hemicara izquierda:", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)

        st.markdown("### Nivel de Control del Dolor")
        bni = st.radio(
            "Seleccione la opci√≥n que m√°s describa su situaci√≥n actual:",
            [
                "1 - Actualmente sin dolor incluso sin tomar medicamentos",
                "2 - Dolor ocasional, no requiero de medicamentos",
                "3 - Dolor controlado adecuadamente con medicamentos",
                "4 - Dolor no controlado con medicamentos",
                "5 - Dolor severo sin alivio"
            ]
        )

        campos_trigemino_validos = (
            tratamiento_trigemino != "" and
            any(sintomas_trigemino.values()) and
            vas_derecha is not None and
            vas_izquierda is not None and
            bni is not None
        )

        if st.button("Enviar", key="enviar_trigemino"):
            if campos_generales_validos and campos_trigemino_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                seleccionados = [s for s, v in sintomas_trigemino.items() if v]

                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento_trigemino,
                    "S√≠ntomas": ", ".join(seleccionados),
                    "VAS hemicara derecha": vas_derecha,
                    "VAS hemicara izquierda": vas_izquierda,
                    "BNI": bni
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Neuralgia_Trigemino")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Aneurisma Intracraneal / Malformaci√≥n Arteriovenosa / Angioma Cavernoso":
    with st.expander("Ingresar datos de Aneurisma / MAV / Cavernoma", expanded=True):
        tratamiento_vascular = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas_vascular = {
            "Dolor de cabeza": st.checkbox("Dolor de cabeza"),
            "Convulsiones": st.checkbox("Convulsiones"),
            "N√°usea o v√≥mito": st.checkbox("N√°usea o v√≥mito"),
            "Cambios en la visi√≥n": st.checkbox("Cambios en la visi√≥n"),
            "Cambios en el habla": st.checkbox("Cambios en el habla"),
            "Cambios en el comportamiento": st.checkbox("Cambios en el comportamiento"),
            "Debilidad de hemicuerpo derecho": st.checkbox("Debilidad de hemicuerpo derecho"),
            "Debilidad de hemicuerpo izquierdo": st.checkbox("Debilidad de hemicuerpo izquierdo"),
            "Dificultad para comprender": st.checkbox("Dificultad para comprender"),
            "Dificultad para concentrarse": st.checkbox("Dificultad para concentrarse"),
            "Cambios en el h√°bito intestinal (diarrea o constipaci√≥n)": st.checkbox("Cambios en el h√°bito intestinal (diarrea o constipaci√≥n)")
        }

        st.markdown("### Estado funcional en la vida diaria")
        kps_opciones = [
            "100% - Normal; sin quejas ni evidencia de enfermedad",
            "90% - Capaz de realizar actividad normal; ligeros signos o s√≠ntomas de enfermedad",
            "80% - Actividad normal con esfuerzo; algunos signos o s√≠ntomas de enfermedad",
            "70% - Capaz de cuidarse a s√≠ mismo; no puede realizar actividades normales",
            "60% - Requiere asistencia ocasional pero puede satisfacer la mayor√≠a de sus necesidades personales",
            "50% - Requiere asistencia considerable y cuidados m√©dicos frecuentes",
            "40% - Discapacitado; requiere cuidados especiales y asistencia constante",
            "30% - Severamente discapacitado; hospitalizaci√≥n es indicada aunque no inminente",
            "20% - Enfermo gravemente; hospitalizaci√≥n necesaria y tratamiento activo requerido",
            "10% - Moribundo; progresi√≥n fatal de la enfermedad"
        ]
        kps_vascular = st.radio("Seleccione la opci√≥n que m√°s se parezca a su estado actual:", kps_opciones)

        campos_vascular_validos = (
            tratamiento_vascular != "" and
            any(sintomas_vascular.values()) and
            kps_vascular is not None
        )

        if st.button("Enviar", key="enviar_vascular"):
            if campos_generales_validos and campos_vascular_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")
                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                seleccionados = [s for s, v in sintomas_vascular.items() if v]

                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento_vascular,
                    "S√≠ntomas": ", ".join(seleccionados),
                    "KPS": kps_vascular
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Aneurisma_MAV_Cavernoma")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Traumatismo Craneoencef√°lico":
    with st.expander("Ingresar datos de Traumatismo Craneoencef√°lico", expanded=True):
        st.markdown("### Nivel de Recuperaci√≥n Neurol√≥gica")
        gos = st.radio(
            "Seleccione la opci√≥n que mejor describa su estado actual:",
            [
                "Se encuentra despierto pero no responde a su entorno (estado vegetativo)",
                "Necesita ayuda constante para todas sus actividades diarias (discapacidad severa - total)",
                "Necesita ayuda parcial para actividades diarias importantes (discapacidad severa - parcial)",
                "Es independiente en casa pero no puede trabajar ni estudiar (discapacidad moderada)",
                "Puede trabajar o estudiar con limitaciones (discapacidad moderada con adaptaci√≥n)",
                "Se siente casi completamente recuperado, aunque con s√≠ntomas leves como dolor de cabeza o fatiga (buena recuperaci√≥n)",
                "Se siente completamente recuperado, sin s√≠ntomas ni limitaciones (recuperaci√≥n completa)"
            ]
        )

        campos_tce_validos = (
            gos is not None
        )

        if st.button("Enviar", key="enviar_tce"):
            if campos_generales_validos and campos_tce_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")
                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "GOS-E": gos
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Traumatismo_Craneoencefalico")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Enfermedad Vascular Cerebral (EVC / Ictus)":
    with st.expander("Ingresar datos de Enfermedad Vascular Cerebral (Ictus)", expanded=True):
        tratamiento_evc = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas_evc = {
            "Debilidad de hemicuerpo derecho": st.checkbox("Debilidad de hemicuerpo derecho"),
            "Debilidad de hemicuerpo izquierdo": st.checkbox("Debilidad de hemicuerpo izquierdo"),
            "Alteraci√≥n del habla": st.checkbox("Alteraci√≥n del habla"),
            "Dificultad para deglutir": st.checkbox("Dificultad para deglutir"),
            "Visi√≥n borrosa o p√©rdida visual parcial": st.checkbox("Visi√≥n borrosa o p√©rdida visual parcial"),
            "P√©rdida de la conciencia": st.checkbox("P√©rdida de la conciencia"),
            "Par√°lisis facial": st.checkbox("Par√°lisis facial"),
            "Alteraciones conductuales o cognitivas": st.checkbox("Alteraciones conductuales o cognitivas"),
            "Incontinencia urinaria": st.checkbox("Incontinencia urinaria"),
            "Dificultad para caminar": st.checkbox("Dificultad para caminar")
        }

        st.markdown("### Nivel de independencia funcional")
        rankin = st.radio(
            "Seleccione la opci√≥n que m√°s se parezca a su estado actual:",
            [
                "0 - Sin s√≠ntomas",
                "1 - Sin discapacidad significativa; capaz de realizar todas las actividades habituales, a pesar de algunos s√≠ntomas",
                "2 - Discapacidad leve; incapaz de realizar todas las actividades previas, pero capaz de cuidar de s√≠ mismo sin ayuda",
                "3 - Discapacidad moderada; requiere algo de ayuda, pero puede caminar sin asistencia",
                "4 - Discapacidad moderadamente severa; incapaz de atender sus propias necesidades corporales sin asistencia y no puede caminar sin ayuda",
                "5 - Discapacidad severa; confinado en cama, incontinente y requiere atenci√≥n constante",
            ]
        )

        campos_evc_validos = (
            tratamiento_evc != "" and
            any(sintomas_evc.values()) and
            rankin is not None
        )

        if st.button("Enviar", key="enviar_evc"):
            if campos_generales_validos and campos_evc_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                seleccionados = [s for s, v in sintomas_evc.items() if v]

                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento_evc,
                    "S√≠ntomas": ", ".join(seleccionados),
                    "mRS (Modified Rankin Scale)": rankin
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("EVC_Ictus")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Hidrocefalia":
    with st.expander("Ingresar datos de Hidrocefalia", expanded=True):
        tratamiento_hidro = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas_hidro = {
            "Dificultad para caminar": st.checkbox("Dificultad para caminar"),
            "Incontinencia urinaria": st.checkbox("Incontinencia urinaria"),
            "Alteraciones en la memoria o lentitud cognitiva": st.checkbox("Alteraciones en la memoria o lentitud cognitiva"),
            "Inestabilidad al estar de pie": st.checkbox("Inestabilidad al estar de pie"),
            "Arrastre de pies o pasos cortos": st.checkbox("Arrastre de pies o pasos cortos"),
            "Ca√≠das frecuentes": st.checkbox("Ca√≠das frecuentes"),
            "Urgencia para orinar": st.checkbox("Urgencia para orinar"),
            "Alteraci√≥n en el juicio o apat√≠a": st.checkbox("Alteraci√≥n en el juicio o apat√≠a"),
            "Dificultad para iniciar la marcha": st.checkbox("Dificultad para iniciar la marcha")
        }

        campos_hidro_validos = (
            tratamiento_hidro != "" and
            any(sintomas_hidro.values())
        )

        if st.button("Enviar", key="enviar_hidro"):
            if campos_generales_validos and campos_hidro_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                seleccionados = [s for s, v in sintomas_hidro.items() if v]

                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento_hidro,
                    "S√≠ntomas": ", ".join(seleccionados)
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Hidrocefalia")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")

elif motivo == "S√≠ntomas Inespec√≠ficos (mareo, v√©rtigo, n√°usea, v√≥mito, debilidad)":
    with st.expander("Ingresar datos de S√≠ntomas Inespec√≠ficos", expanded=True):
        tratamiento_inesp = st.radio("Estatus de tratamiento", [
            "Ser√° valorado en consulta",
            "Tratamiento con medicamentos y fisioterapia",
            "Preparaci√≥n para cirug√≠a",
            "Operado previamente con otro doctor",
            "Operado previamente con Dr. Ulises Garc√≠a"
        ])

        st.markdown("### Seleccione los s√≠ntomas asociados a su motivo de consulta:")
        sintomas_inesp = {
            "Mareo": st.checkbox("Mareo"),
            "V√©rtigo": st.checkbox("V√©rtigo"),
            "N√°usea": st.checkbox("N√°usea"),
            "V√≥mito": st.checkbox("V√≥mito"),
            "Debilidad general": st.checkbox("Debilidad general"),
            "Sensaci√≥n de desmayo": st.checkbox("Sensaci√≥n de desmayo"),
            "Zumbido en los o√≠dos (ac√∫fenos)": st.checkbox("Zumbido en los o√≠dos (ac√∫fenos)"),
            "Visi√≥n borrosa o doble": st.checkbox("Visi√≥n borrosa o doble"),
            "Inestabilidad al caminar": st.checkbox("Inestabilidad al caminar"),
            "Cefalea leve": st.checkbox("Cefalea leve"),
            "Alteraci√≥n del equilibrio": st.checkbox("Alteraci√≥n del equilibrio"),
            "Intolerancia al movimiento": st.checkbox("Intolerancia al movimiento")
        }

        st.markdown("### Intensidad de los s√≠ntomas")
        st.image("VAS.jpg", caption="Escala Visual An√°loga (VAS)", use_container_width=True)
        vas_inesp = st.radio("¬øQu√© tan intensos son sus s√≠ntomas actualmente?", [f"{i}%" for i in range(0, 101, 10)], horizontal=True)

        campos_inesp_validos = (
            tratamiento_inesp != "" and
            any(sintomas_inesp.values()) and
            vas_inesp is not None
        )

        if st.button("Enviar", key="enviar_inesp"):
            if campos_generales_validos and campos_inesp_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                seleccionados = [s for s, v in sintomas_inesp.items() if v]

                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Estatus de tratamiento": tratamiento_inesp,
                    "S√≠ntomas": ", ".join(seleccionados),
                    "VAS general": vas_inesp
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Sintomas_Inespecificos")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo == "Otro (especificar)":
    with st.expander("Ingresar datos de Otro motivo de consulta", expanded=True):
        motivo_otro = st.text_input("Describa brevemente el motivo de su consulta:")
        sintomas_otro = st.text_area("Describa los s√≠ntomas que presenta:")

        campos_otro_validos = (
            motivo_otro.strip() != "" and sintomas_otro.strip() != ""
        )

        if st.button("Enviar", key="enviar_otro"):
            if campos_generales_validos and campos_otro_validos:
                st.success("‚úÖ Agradecemos por su visita, en breve lo pasamos a su consulta")

                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                datos = {
                    "Fecha y hora": timestamp,
                    "Nombre": nombre,
                    "Edad": edad,
                    "Sexo": sexo,
                    "Tipo de consulta": consulta,
                    "Motivo especificado": motivo_otro,
                    "S√≠ntomas": sintomas_otro
                }

                df = pd.DataFrame([datos])
                try:
                    client = conectar_google_sheets()
                    sheet = client.open("respuestas_neuro").worksheet("Otro")
                    if sheet.row_count == 0 or not any(sheet.row_values(1)):
                        sheet.append_row(list(datos.keys()))
                    sheet.append_row(list(datos.values()))
                except Exception as e:
                    st.error(f"‚ùå Error al guardar en Google Sheets: {e}")
            else:
                st.error("‚ùå Por favor complete todos los campos obligatorios antes de enviar el formulario.")
elif motivo != "Seleccione..." and motivo not in [
    "Dolor / Cirug√≠a Lumbar",
    "Dolor / Cirug√≠a Cervical",
    "Dolor / Cirug√≠a Columna Dorsal"
    "Tumor Intracraneal",
    "Neuralgia del Trig√©mino",
    "Aneurisma Intracraneal / Malformaci√≥n Arteriovenosa / Angioma Cavernoso",
    "Traumatismo Craneoencef√°lico"
    "Enfermedad Vascular Cerebral (EVC / Ictus)",
    "Hidrocefalia"
    "S√≠ntomas Inespec√≠ficos (mareo, v√©rtigo, n√°usea, v√≥mito, debilidad)"
    "Otro (especificar)"
]:
    st.warning("‚ö†Ô∏è Esta secci√≥n estar√° disponible pr√≥ximamente.")